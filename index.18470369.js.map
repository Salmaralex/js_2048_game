{"mappings":"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","sources":["<anon>","src/scripts/main.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js"],"sourcesContent":["(function () {\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\n/* eslint-disable function-paren-newline */ function $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.initialState = initialState;\n        this.emptyfields = [];\n        this.status = \"idle\";\n        this.score = 0;\n        this.rows = document.querySelectorAll(\".field-row\");\n        this.setEmptyfields();\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"isWin\",\n            value: function isWin() {\n                return this.initialState.some(function(row) {\n                    return row.some(function(col) {\n                        return col === 2048;\n                    });\n                });\n            }\n        },\n        {\n            key: \"isGameOver\",\n            value: function isGameOver() {\n                if (this.emptyfields.length > 0) return false;\n                for(var row = 0; row < this.initialState.length; row++)for(var col = 0; col < this.initialState[row].length; col++){\n                    var current = this.initialState[row][col];\n                    if (col < this.initialState[row].length - 1 && current === this.initialState[row][col + 1]) return false;\n                    if (row < this.initialState.length - 1 && current === this.initialState[row + 1][col]) return false;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"stateChanged\",\n            value: function stateChanged(prevState) {\n                return this.initialState.some(function(row, i) {\n                    return row.some(function(cell, j) {\n                        return cell !== prevState[i][j];\n                    });\n                });\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                this.initialState.forEach(function(row, index) {\n                    _this.initialState[index] = _this.merge(row);\n                });\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                this.initialState.forEach(function(row, index) {\n                    var lal = _this.merge(row.reverse());\n                    _this.initialState[index] = lal.reverse();\n                });\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this;\n                this.initialState = this.transpose(this.initialState);\n                this.initialState.forEach(function(row, index) {\n                    var lal = _this.merge(row);\n                    _this.initialState[index] = lal;\n                });\n                this.initialState = this.transpose(this.initialState);\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this;\n                this.initialState = this.transpose(this.initialState);\n                this.initialState.forEach(function(row, index) {\n                    var lal = _this.merge(row.reverse());\n                    _this.initialState[index] = lal.reverse();\n                });\n                this.initialState = this.transpose(this.initialState);\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {}\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {}\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                if (this.status === \"idle\") {\n                    this.status = \"playing\";\n                    this.createPlate();\n                    this.createPlate();\n                }\n            }\n        },\n        {\n            key: \"setEmptyfields\",\n            value: function setEmptyfields() {\n                this.emptyfields = [];\n                for(var row = 0; row < this.initialState.length; row++){\n                    for(var col = 0; col < this.initialState[row].length; col++)if (this.initialState[row][col] === 0) this.emptyfields.push({\n                        row: row,\n                        col: col\n                    });\n                }\n            }\n        },\n        {\n            key: \"setRandomField\",\n            value: function setRandomField() {\n                if (this.emptyfields.length === 0) return null;\n                var randomIndex = Math.floor(Math.random() * this.emptyfields.length);\n                var field = this.emptyfields[randomIndex];\n                this.initialState[field.row][field.col] = Math.random() < 0.1 ? 4 : 2;\n                this.emptyfields.splice(randomIndex, 1);\n                return field;\n            }\n        },\n        {\n            key: \"createTeableArray\",\n            value: function createTeableArray() {\n                var tableArray = this.initialState.map(function(row) {\n                    return row.map(function(cell) {\n                        return {\n                            content: cell,\n                            classes: cell > 0 ? [\n                                \"field-cell--\".concat(cell)\n                            ] : []\n                        };\n                    });\n                });\n                return tableArray;\n            }\n        },\n        {\n            key: \"transpose\",\n            value: function transpose(matrix) {\n                return matrix[0].map(function(_, colIndex) {\n                    return matrix.map(function(row) {\n                        return row[colIndex];\n                    });\n                });\n            }\n        },\n        {\n            key: \"merge\",\n            value: function merge(row) {\n                var rowForMerge = row.filter(function(x) {\n                    return x !== 0;\n                });\n                for(var i = 0; i < rowForMerge.length - 1; i++)if (rowForMerge[i] === rowForMerge[i + 1]) {\n                    rowForMerge[i] *= 2;\n                    rowForMerge[i + 1] = 0;\n                    this.score += rowForMerge[i];\n                    i++;\n                }\n                var mergedRow = rowForMerge.filter(function(x) {\n                    return x !== 0;\n                });\n                return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(mergedRow).concat((0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(Array(4 - mergedRow.length).fill(0)));\n            }\n        },\n        {\n            key: \"createPlate\",\n            value: function createPlate() {\n                var tableArray = this.createTeableArray();\n                this.updateTable(tableArray);\n                var newPlate = this.setRandomField();\n                if (newPlate !== null) {\n                    tableArray[newPlate.row][newPlate.col].content = this.initialState[newPlate.row][newPlate.col];\n                    tableArray[newPlate.row][newPlate.col].classes.push(\"field-cell--\".concat(tableArray[newPlate.row][newPlate.col].content));\n                    this.updateTable(tableArray);\n                }\n            }\n        },\n        {\n            key: \"updateTable\",\n            value: function updateTable(tableArray) {\n                this.rows.forEach(function(row, rowIndex) {\n                    Array.from(row.children).forEach(function(cell, colIndex) {\n                        var cellData = tableArray[rowIndex][colIndex];\n                        if (cellData.content !== 0) {\n                            cell.textContent = cellData.content;\n                            cell.classList = [\n                                \"field-cell\"\n                            ];\n                            cell.classList.add(cellData.classes);\n                        } else {\n                            cell.textContent = \"\";\n                            cell.classList = [\n                                \"field-cell\"\n                            ];\n                        }\n                    });\n                });\n                this.setEmptyfields();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.initialState = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                this.emptyfields = [];\n                this.status = \"idle\";\n                this.score = 0;\n                this.setEmptyfields();\n                var tableArray = this.createTeableArray();\n                this.updateTable(tableArray);\n                this.score = 0;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$startButton = document.getElementsByClassName(\"button start\")[0];\nvar $197cd56b15c33885$var$score = document.getElementsByClassName(\"game-score\")[0];\nvar $197cd56b15c33885$var$controls = document.getElementsByClassName(\"controls\")[0];\nvar $197cd56b15c33885$var$startMessage = document.getElementsByClassName(\"message message-start\")[0];\nvar $197cd56b15c33885$var$winMessage = document.getElementsByClassName(\"message message-win hidden\")[0];\nvar $197cd56b15c33885$var$loseMessage = document.getElementsByClassName(\"message message-lose hidden\")[0];\nvar $197cd56b15c33885$var$restart = document.createElement(\"button\");\n$197cd56b15c33885$var$restart.className = \"button restart\";\n$197cd56b15c33885$var$restart.style.display = \"none\";\n$197cd56b15c33885$var$restart.innerText = \"Restart\";\n$197cd56b15c33885$var$controls.appendChild($197cd56b15c33885$var$restart);\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", function() {\n    $197cd56b15c33885$var$game.start();\n    $197cd56b15c33885$var$game.status = \"playing\";\n    document.addEventListener(\"keydown\", $197cd56b15c33885$var$handleKeyPress);\n    $197cd56b15c33885$var$checkGameStatus();\n    $197cd56b15c33885$var$startButton.style.display = \"none\";\n    $197cd56b15c33885$var$restart.style.display = \"\";\n    $197cd56b15c33885$var$startMessage.classList.add(\"hidden\");\n});\nfunction $197cd56b15c33885$var$handleKeyPress(e) {\n    var prevState = $197cd56b15c33885$var$game.initialState.map(function(row) {\n        return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n    });\n    switch(e.code){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n    }\n    if ($197cd56b15c33885$var$game.stateChanged(prevState)) $197cd56b15c33885$var$game.createPlate();\n    $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.getScore();\n    $197cd56b15c33885$var$checkGameStatus();\n}\nfunction $197cd56b15c33885$var$checkGameStatus() {\n    if ($197cd56b15c33885$var$game.isWin()) {\n        $197cd56b15c33885$var$game.status = \"win\";\n        $197cd56b15c33885$var$winMessage.classList.remove(\"hidden\");\n        document.removeEventListener(\"keydown\", $197cd56b15c33885$var$handleKeyPress);\n        return;\n    }\n    if ($197cd56b15c33885$var$game.isGameOver()) {\n        $197cd56b15c33885$var$game.status = \"lose\";\n        $197cd56b15c33885$var$loseMessage.classList.remove(\"hidden\");\n        document.removeEventListener(\"keydown\", $197cd56b15c33885$var$handleKeyPress);\n    }\n}\n$197cd56b15c33885$var$restart.addEventListener(\"click\", function() {\n    $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$game.status = \"idle\";\n    $197cd56b15c33885$var$startButton.style.display = \"\";\n    $197cd56b15c33885$var$restart.style.display = \"none\";\n    $197cd56b15c33885$var$score.innerText = $197cd56b15c33885$var$game.getScore();\n    $197cd56b15c33885$var$winMessage.classList.add(\"hidden\");\n    $197cd56b15c33885$var$loseMessage.classList.add(\"hidden\");\n});\n\n})();\n//# sourceMappingURL=index.18470369.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst startButton = document.getElementsByClassName('button start')[0];\nconst score = document.getElementsByClassName('game-score')[0];\nconst controls = document.getElementsByClassName('controls')[0];\nconst startMessage = document.getElementsByClassName(\n  'message message-start',\n)[0];\nconst winMessage = document.getElementsByClassName(\n  'message message-win hidden',\n)[0];\nconst loseMessage = document.getElementsByClassName(\n  'message message-lose hidden',\n)[0];\nconst restart = document.createElement('button');\n\nrestart.className = 'button restart';\nrestart.style.display = 'none';\nrestart.innerText = 'Restart';\n\ncontrols.appendChild(restart);\n\nstartButton.addEventListener('click', () => {\n  game.start();\n  game.status = 'playing';\n\n  document.addEventListener('keydown', handleKeyPress);\n  checkGameStatus();\n\n  startButton.style.display = 'none';\n  restart.style.display = '';\n  startMessage.classList.add('hidden');\n});\n\nfunction handleKeyPress(e) {\n  const prevState = game.initialState.map((row) => [...row]);\n\n  switch (e.code) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n  }\n\n  if (game.stateChanged(prevState)) {\n    game.createPlate();\n  }\n\n  score.textContent = game.getScore();\n\n  checkGameStatus();\n}\n\nfunction checkGameStatus() {\n  if (game.isWin()) {\n    game.status = 'win';\n    winMessage.classList.remove('hidden');\n    document.removeEventListener('keydown', handleKeyPress);\n\n    return;\n  }\n\n  if (game.isGameOver()) {\n    game.status = 'lose';\n\n    loseMessage.classList.remove('hidden');\n    document.removeEventListener('keydown', handleKeyPress);\n  }\n}\n\nrestart.addEventListener('click', () => {\n  game.restart();\n  game.status = 'idle';\n  startButton.style.display = '';\n  restart.style.display = 'none';\n  score.innerText = game.getScore();\n\n  winMessage.classList.add('hidden');\n  loseMessage.classList.add('hidden');\n});\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","/* eslint-disable function-paren-newline */\n'use strict';\n\nclass Game {\n  /**\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   */\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.initialState = initialState;\n    this.emptyfields = [];\n    this.status = 'idle';\n    this.score = 0;\n    this.rows = document.querySelectorAll('.field-row');\n    this.setEmptyfields();\n  }\n\n  isWin() {\n    return this.initialState.some((row) => row.some((col) => col === 2048));\n  }\n\n  isGameOver() {\n    if (this.emptyfields.length > 0) {\n      return false;\n    }\n\n    for (let row = 0; row < this.initialState.length; row++) {\n      for (let col = 0; col < this.initialState[row].length; col++) {\n        const current = this.initialState[row][col];\n\n        if (\n          col < this.initialState[row].length - 1 &&\n          current === this.initialState[row][col + 1]\n        ) {\n          return false;\n        }\n\n        if (\n          row < this.initialState.length - 1 &&\n          current === this.initialState[row + 1][col]\n        ) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  stateChanged(prevState) {\n    return this.initialState.some((row, i) =>\n      row.some((cell, j) => cell !== prevState[i][j]),\n    );\n  }\n\n  moveLeft() {\n    this.initialState.forEach((row, index) => {\n      this.initialState[index] = this.merge(row);\n    });\n  }\n\n  moveRight() {\n    this.initialState.forEach((row, index) => {\n      const lal = this.merge(row.reverse());\n\n      this.initialState[index] = lal.reverse();\n    });\n  }\n  moveUp() {\n    this.initialState = this.transpose(this.initialState);\n\n    this.initialState.forEach((row, index) => {\n      const lal = this.merge(row);\n\n      this.initialState[index] = lal;\n    });\n\n    this.initialState = this.transpose(this.initialState);\n  }\n\n  moveDown() {\n    this.initialState = this.transpose(this.initialState);\n\n    this.initialState.forEach((row, index) => {\n      const lal = this.merge(row.reverse());\n\n      this.initialState[index] = lal.reverse();\n    });\n\n    this.initialState = this.transpose(this.initialState);\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {}\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {}\n\n  start() {\n    if (this.status === 'idle') {\n      this.status = 'playing';\n\n      this.createPlate();\n      this.createPlate();\n    }\n  }\n\n  setEmptyfields() {\n    this.emptyfields = [];\n\n    for (let row = 0; row < this.initialState.length; row++) {\n      for (let col = 0; col < this.initialState[row].length; col++) {\n        if (this.initialState[row][col] === 0) {\n          this.emptyfields.push({ row, col });\n        }\n      }\n    }\n  }\n\n  setRandomField() {\n    if (this.emptyfields.length === 0) {\n      return null;\n    }\n\n    const randomIndex = Math.floor(Math.random() * this.emptyfields.length);\n    const field = this.emptyfields[randomIndex];\n\n    this.initialState[field.row][field.col] = Math.random() < 0.1 ? 4 : 2;\n\n    this.emptyfields.splice(randomIndex, 1);\n\n    return field;\n  }\n\n  createTeableArray() {\n    const tableArray = this.initialState.map((row) =>\n      row.map((cell) => ({\n        content: cell,\n        classes: cell > 0 ? [`field-cell--${cell}`] : [],\n      })),\n    );\n\n    return tableArray;\n  }\n\n  transpose(matrix) {\n    return matrix[0].map((_, colIndex) => matrix.map((row) => row[colIndex]));\n  }\n\n  merge(row) {\n    const rowForMerge = row.filter((x) => x !== 0);\n\n    for (let i = 0; i < rowForMerge.length - 1; i++) {\n      if (rowForMerge[i] === rowForMerge[i + 1]) {\n        rowForMerge[i] *= 2;\n        rowForMerge[i + 1] = 0;\n        this.score += rowForMerge[i];\n        i++;\n      }\n    }\n\n    const mergedRow = rowForMerge.filter((x) => x !== 0);\n\n    return [...mergedRow, ...Array(4 - mergedRow.length).fill(0)];\n  }\n\n  createPlate() {\n    const tableArray = this.createTeableArray();\n\n    this.updateTable(tableArray);\n\n    const newPlate = this.setRandomField();\n\n    if (newPlate !== null) {\n      tableArray[newPlate.row][newPlate.col].content =\n        this.initialState[newPlate.row][newPlate.col];\n\n      tableArray[newPlate.row][newPlate.col].classes.push(\n        `field-cell--${tableArray[newPlate.row][newPlate.col].content}`,\n      );\n\n      this.updateTable(tableArray);\n    }\n  }\n\n  updateTable(tableArray) {\n    this.rows.forEach((row, rowIndex) => {\n      Array.from(row.children).forEach((cell, colIndex) => {\n        const cellData = tableArray[rowIndex][colIndex];\n\n        if (cellData.content !== 0) {\n          cell.textContent = cellData.content;\n          cell.classList = ['field-cell'];\n          cell.classList.add(cellData.classes);\n        } else {\n          cell.textContent = '';\n          cell.classList = ['field-cell'];\n        }\n      });\n    });\n\n    this.setEmptyfields();\n  }\n\n  restart() {\n    this.initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    this.emptyfields = [];\n    this.status = 'idle';\n    this.score = 0;\n    this.setEmptyfields();\n\n    const tableArray = this.createTeableArray();\n\n    this.updateTable(tableArray);\n    this.score = 0;\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n"],"names":["$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","$197cd56b15c33885$var$game","protoProps","staticProps","Game","initialState","arguments","instance","Constructor","emptyfields","status","score","rows","document","querySelectorAll","setEmptyfields","value","some","row","col","current","prevState","cell","j","_this","forEach","index","merge","lal","reverse","transpose","createPlate","push","randomIndex","Math","floor","random","field","splice","map","content","classes","concat","matrix","_","colIndex","rowForMerge","filter","x","mergedRow","fill","tableArray","createTeableArray","updateTable","newPlate","setRandomField","rowIndex","children","cellData","textContent","classList","add","$197cd56b15c33885$var$startButton","getElementsByClassName","$197cd56b15c33885$var$score","$197cd56b15c33885$var$controls","$197cd56b15c33885$var$startMessage","$197cd56b15c33885$var$winMessage","$197cd56b15c33885$var$loseMessage","$197cd56b15c33885$var$restart","createElement","$197cd56b15c33885$var$handleKeyPress","e","code","moveLeft","moveRight","moveUp","moveDown","stateChanged","getScore","$197cd56b15c33885$var$checkGameStatus","isWin","remove","removeEventListener","isGameOver","className","style","display","innerText","appendChild","addEventListener","start","restart"],"version":3,"file":"index.18470369.js.map"}